package com.example.bettinggame;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageButton;
import androidx.appcompat.app.AppCompatActivity;
import androidx.viewpager2.widget.ViewPager2;
import com.example.bettinggame.model.TutorialStep;
import com.example.bettinggame.services.AudioManagerUnified;

import java.util.ArrayList;
import java.util.List;

public class TutorialActivity extends AppCompatActivity {

    private ViewPager2 viewPagerTutorial;
    private TutorialAdapter tutorialAdapter;
    private List<TutorialStep> tutorialSteps;
    private ImageButton buttonPrevious;
    private ImageButton buttonNext;
    private Button buttonStartGame;
    private String playerName;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_tutorial);
        AudioManagerUnified.initialize(this);
        
        Intent intent = getIntent();
        if (intent != null && intent.hasExtra("username")) {
            String name = intent.getStringExtra("username");
            if (name != null && !name.trim().isEmpty()) {
                playerName = name.trim();
            }
        }

        viewPagerTutorial = findViewById(R.id.viewPagerTutorial);
        buttonPrevious = findViewById(R.id.buttonPrevious);
        buttonNext = findViewById(R.id.buttonNext);
        buttonStartGame = findViewById(R.id.buttonStartGame);

        loadTutorialSteps();

        tutorialAdapter = new TutorialAdapter(this, tutorialSteps);
        viewPagerTutorial.setAdapter(tutorialAdapter);

        updateNavigationButtons(0); // Initial state for the first page

        viewPagerTutorial.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
            @Override
            public void onPageSelected(int position) {
                super.onPageSelected(position);
                updateNavigationButtons(position);
            }
        });

        buttonPrevious.setOnClickListener(v -> {
            // X√≥a sound kh·ªèi previous button
            int currentItem = viewPagerTutorial.getCurrentItem();
            if (currentItem > 0) {
                viewPagerTutorial.setCurrentItem(currentItem - 1);
            }
        });

        buttonNext.setOnClickListener(v -> {
            // X√≥a sound kh·ªèi next button
            int currentItem = viewPagerTutorial.getCurrentItem();
            if (currentItem < tutorialSteps.size() - 1) {
                viewPagerTutorial.setCurrentItem(currentItem + 1);
            }
        });

        buttonStartGame.setOnClickListener(v -> {
            AudioManagerUnified.playButtonSound(this);
            Intent startGameIntent = new Intent(TutorialActivity.this, MainActivity.class);
            startGameIntent.putExtra("username", playerName);
            startActivity(startGameIntent);
            finish(); 
        });
    }

    private void loadTutorialSteps() {
        tutorialSteps = new ArrayList<>();
        tutorialSteps.add(new TutorialStep(R.drawable.gameplay, "ƒê√¢y l√† m√†n h√¨nh ch√≠nh c·ªßa tr√≤ ch∆°i, n∆°i b·∫°n c√≥ th·ªÉ th·∫•y c√°c ƒë∆∞·ªùng ƒëua v√† nh·ªØng ch√∫ v·ªãt."));
        tutorialSteps.add(new TutorialStep(R.drawable.balance, "ƒê√¢y l√† s·ªë d∆∞ hi·ªán t·∫°i c·ªßa b·∫°n. H√£y theo d√µi ƒë·ªÉ bi·∫øt m√¨nh c√≤n bao nhi√™u ti·ªÅn nh√©!"));
        tutorialSteps.add(new TutorialStep(R.drawable.tutorial, "Nh·∫•n v√†o ƒë√¢y ƒë·ªÉ xem l·∫°i h∆∞·ªõng d·∫´n ch∆°i game b·∫•t c·ª© l√∫c n√†o."));
        tutorialSteps.add(new TutorialStep(R.drawable.logout, "S·ª≠ d·ª•ng n√∫t n√†y ƒë·ªÉ ƒëƒÉng xu·∫•t kh·ªèi t√†i kho·∫£n hi·ªán t·∫°i."));
        tutorialSteps.add(new TutorialStep(R.drawable.deposit, "N·∫øu h·∫øt ti·ªÅn, b·∫°n c√≥ th·ªÉ n·∫°p th√™m b·∫±ng c√°ch nh·∫•n v√†o n√∫t n√†y."));
        tutorialSteps.add(new TutorialStep(R.drawable.deposit_detail, "Nh·∫≠p s·ªë ti·ªÅn b·∫°n mu·ªën n·∫°p v√† x√°c nh·∫≠n."));
    tutorialSteps.add(new TutorialStep(R.drawable.bet, "Ch·ªçn ü¶Ü v√† nh·∫•n n√∫t 'ƒê·∫∑t' ƒë·ªÉ ƒë·∫∑t c∆∞·ª£c cho ch√∫ v·ªãt ƒë√≥. B·∫°n c√≥ th·ªÉ ƒë·∫∑t c∆∞·ª£c cho nhi·ªÅu v·ªãt kh√°c nhau.<br> üèÖ N·∫øu th·∫Øng cu·ªôc ƒëua, b·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c s·ªë ti·ªÅn <b>g·∫•p ƒë√¥i</b> s·ªë ti·ªÅn ƒë√£ c∆∞·ª£c.<br> üò≠ N·∫øu thua, s·ªë ti·ªÅn c∆∞·ª£c s·∫Ω b·ªã tr·ª´ kh·ªèi s·ªë d∆∞ c·ªßa b·∫°n "));
        tutorialSteps.add(new TutorialStep(R.drawable.bet_detail, "Nh·∫≠p s·ªë ti·ªÅn b·∫°n mu·ªën c∆∞·ª£c cho ch√∫ v·ªãt ƒë√£ ch·ªçn."));
        tutorialSteps.add(new TutorialStep(R.drawable.start, "Sau khi ƒë√£ s·∫µn s√†ng, nh·∫•n 'B·∫Øt ƒë·∫ßu ƒëua' ƒë·ªÉ cu·ªôc ƒëua b·∫Øt ƒë·∫ßu!"));
    }

    private void updateNavigationButtons(int position) {
        if (tutorialSteps.isEmpty()) {
            buttonPrevious.setVisibility(View.GONE);
            buttonNext.setVisibility(View.GONE);
            buttonStartGame.setVisibility(View.GONE);
            return;
        }

        if (position == 0) {
            buttonPrevious.setVisibility(View.INVISIBLE);
        } else {
            buttonPrevious.setVisibility(View.VISIBLE);
        }

        if (position == tutorialSteps.size() - 1) {
            buttonNext.setVisibility(View.INVISIBLE);
            buttonStartGame.setVisibility(View.VISIBLE);
        } else {
            buttonNext.setVisibility(View.VISIBLE);
            buttonStartGame.setVisibility(View.GONE);
        }
    }

    @Override
    protected void onResume() {
        super.onResume();
        AudioManagerUnified.onActivityResumed(this);
    }

    @Override
    protected void onPause() {
        super.onPause();
        AudioManagerUnified.onActivityPaused();
    }

    @Override
    public void onLowMemory() {
        super.onLowMemory();
        AudioManagerUnified.onLowMemory();
    }

    @Override
    public void onTrimMemory(int level) {
        super.onTrimMemory(level);
        AudioManagerUnified.onTrimMemory(level);
    }
}
